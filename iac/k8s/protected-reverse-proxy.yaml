apiVersion: v1
kind: Namespace
metadata:
  name: gateway
  labels:
    istio-injection: enabled
    kubernetes.io/metadata.name: gateway
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: reverse-proxy-config
  namespace: gateway
data:
  default.conf: |
    server {
        listen 80;
        server_name _;

        location / {
            proxy_pass http://hardened-httpbin.istio-httpbin.svc.cluster.local:8000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: reverse-proxy
  namespace: gateway
spec:
  replicas: 1
  selector:
    matchLabels:
      app: reverse-proxy
  template:
    metadata:
      labels:
        app: reverse-proxy
    spec:
      serviceAccountName: reverse-proxy-sa
      containers:
      - name: nginx
        image: nginx:alpine
        ports:
        - containerPort: 80
        volumeMounts:
        - name: nginx-config
          mountPath: /etc/nginx/conf.d/default.conf
          subPath: default.conf
      volumes:
      - name: nginx-config
        configMap:
          name: reverse-proxy-config
          items:
          - key: default.conf
            path: default.conf
---
apiVersion: v1
kind: Service
metadata:
  name: reverse-proxy-service
  namespace: gateway
spec:
  selector:
    app: reverse-proxy
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
---
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  name: selfsigned-issuer
  namespace: gateway
spec:
  selfSigned: {}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: reverse-proxy-ingress
  namespace: gateway
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - hardened-httpbin.winty.server
    secretName: hardened-httpbin-tls-secret
  rules:
  - host: hardened-httpbin.winty.server
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: reverse-proxy-service
            port:
              number: 80
---
apiVersion: security.istio.io/v1
kind: PeerAuthentication
metadata:
  name: "gateway-policy"
  namespace: "gateway"
spec:
  selector:
     matchLabels:
       app: reverse-proxy
  mtls:
    mode: PERMISSIVE
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: reverse-proxy-sa
  namespace: gateway
---
apiVersion: networking.istio.io/v1
kind: DestinationRule
metadata:
  name: httpbin-dr
  namespace: istio-httpbin
spec:
  host: hardened-httpbin.istio-httpbin.svc.cluster.local
  trafficPolicy:
    tls:
      mode: ISTIO_MUTUAL # Enforces mTLS
---
apiVersion: security.istio.io/v1
kind: AuthorizationPolicy
metadata:
  name: allow-reverse-proxy
  namespace: istio-httpbin
spec:
  selector:
    matchLabels:
      app: hardened-httpbin
  action: ALLOW
  rules:
  - from:
    - source:
        principals: ["cluster.local/ns/gateway/sa/reverse-proxy-sa"]